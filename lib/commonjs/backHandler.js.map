{"version":3,"sources":["backHandler.ts"],"names":["appBackHandler","networkLoggerBackHandler","setBackHandler","backHandler","goBack","backHandlerSet","getBackHandler"],"mappings":";;;;;;AAAA,IAAIA,cAAJ;AACA,IAAIC,wBAAJ;;AAEO,MAAMC,cAAc,GAAIC,WAAD,IAA8B;AAC1DF,EAAAA,wBAAwB,GAAGE,WAA3B;AACD,CAFM;;;;AAIP,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,MAAIH,wBAAJ,EAA8B;AAC5B,WAAOA,wBAAwB,EAA/B;AACD;;AACD,qBAAAD,cAAc,UAAd;AACD,CALD;;AAOO,MAAMK,cAAc,GAAG,MAAM;AAClC,SAAO,CAAC,CAACL,cAAT;AACD,CAFM;AAIP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACO,MAAMM,cAAc,GAAIH,WAAD,IAA4B;AACxDH,EAAAA,cAAc,GAAGG,WAAjB;AAEA,SAAOC,MAAP;AACD,CAJM","sourcesContent":["let appBackHandler: (() => any) | undefined;\nlet networkLoggerBackHandler: (() => void) | undefined;\n\nexport const setBackHandler = (backHandler?: () => void) => {\n  networkLoggerBackHandler = backHandler;\n};\n\nconst goBack = () => {\n  if (networkLoggerBackHandler) {\n    return networkLoggerBackHandler();\n  }\n  appBackHandler?.();\n};\n\nexport const backHandlerSet = () => {\n  return !!appBackHandler;\n};\n\n/**\n * Get a replacement back handler to use instead of your default navigation so you\n * can use your existing back button to navigate inside the network logger.\n *\n * If navigation has occurred in the logger app then pressing your back handler will\n * navigate internally. If it is already on the default page then it will call your\n * original back handler.\n *\n * e.g.\n *\n * const navigation = useNavigation()\n *\n * const onBack = getBackHandler(navigation.goBack)\n *\n * <Button onPress={onBack} title=\"Go back\" />\n *\n * @param backHandler App navigation default back handler\n */\nexport const getBackHandler = (backHandler: () => any) => {\n  appBackHandler = backHandler;\n\n  return goBack;\n};\n"]}