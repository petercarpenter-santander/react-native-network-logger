{"version":3,"sources":["ResultItem.tsx"],"names":["React","View","TouchableOpacity","Text","StyleSheet","useThemedStyles","useTheme","backHandlerSet","ResultItem","style","request","onPress","styles","themedStyles","theme","onDetailsPage","getUrlTextColor","status","color","getStatusTextColor","colors","text","statusGood","statusWarning","statusBad","getStatusStyles","getStatusWrapperStyles","borderColor","MaybeTouchable","pad","num","slice","getTime","time","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","container","accessibilityRole","leftContainer","method","statusWrapper","duration","startTime","content","paddedUrl","url","create","justifyContent","alignItems","backgroundColor","card","flexDirection","margin","paddingTop","paddingBottom","borderRadius","fontWeight","textAlign","borderWidth","paddingVertical","paddingHorizontal","marginVertical","fontSize","paddingLeft","paddingRight","flexShrink","flex","padding","width","muted","marginTop","marginHorizontal"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, TouchableOpacity, Text, StyleSheet } from 'react-native';\nimport NetworkRequestInfo from '../NetworkRequestInfo';\nimport { Theme, useThemedStyles, useTheme } from '../theme';\nimport { backHandlerSet } from '../backHandler';\n\ninterface Props {\n  request: NetworkRequestInfo;\n  onPress?(): void;\n  style?: any;\n}\n\nconst ResultItem: React.FC<Props> = ({ style, request, onPress }) => {\n  const styles = useThemedStyles(themedStyles);\n  const theme = useTheme();\n  const onDetailsPage = !onPress;\n  const getUrlTextColor = (status: number) => {\n    if (status >= 400) {\n      return {\n        color: getStatusTextColor(status),\n      };\n    }\n    return {};\n  };\n  const getStatusTextColor = (status: number) => {\n    if (status < 0) {\n      return theme.colors.text;\n    }\n    if (status < 400) {\n      return theme.colors.statusGood;\n    }\n    if (status < 500) {\n      return theme.colors.statusWarning;\n    }\n    return theme.colors.statusBad;\n  };\n\n  const getStatusStyles = (status: number) => ({\n    color: getStatusTextColor(status),\n  });\n\n  const getStatusWrapperStyles = (status: number) => ({\n    borderColor: getStatusTextColor(status),\n  });\n\n  const MaybeTouchable: any = onPress ? TouchableOpacity : View;\n\n  const status = request.status > 0 ? request.status : '-';\n\n  const pad = (num: number) => `0${num}`.slice(-2);\n\n  const getTime = (time: number) => {\n    const date = new Date(time);\n    const hours = pad(date.getHours());\n    const minutes = pad(date.getMinutes());\n    const seconds = pad(date.getSeconds());\n\n    return `${hours}:${minutes}:${seconds}`;\n  };\n\n  return (\n    <MaybeTouchable\n      style={[styles.container, style]}\n      {...(onPress && { accessibilityRole: 'button', onPress })}\n    >\n      <View style={styles.leftContainer}>\n        <Text\n          style={[styles.text, styles.method]}\n          accessibilityLabel={`Method: ${request.method}`}\n        >\n          {request.method}\n        </Text>\n        <View\n          style={[styles.statusWrapper, getStatusWrapperStyles(request.status)]}\n        >\n          <Text\n            style={[styles.status, getStatusStyles(request.status)]}\n            accessibilityLabel={`Response status ${status}`}\n          >\n            {status}\n          </Text>\n        </View>\n        <Text style={styles.text}>\n          {request.duration > 0 ? `${request.duration}ms` : 'pending'}\n        </Text>\n        <Text style={styles.time}>{getTime(request.startTime)}</Text>\n      </View>\n      <Text\n        style={[\n          styles.text,\n          styles.content,\n          getUrlTextColor(request.status),\n          onDetailsPage && !backHandlerSet() && styles.paddedUrl,\n        ]}\n      >\n        {request.url}\n      </Text>\n    </MaybeTouchable>\n  );\n};\n\nconst themedStyles = (theme: Theme) =>\n  StyleSheet.create({\n    container: {\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      backgroundColor: theme.colors.card,\n      flexDirection: 'row',\n      margin: 5,\n      paddingTop: 10,\n      paddingBottom: 10,\n      borderRadius: 5,\n    },\n    leftContainer: {\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    status: {\n      fontWeight: 'bold',\n      textAlign: 'center',\n    },\n    statusWrapper: {\n      borderWidth: 1,\n      borderRadius: 10,\n      paddingVertical: 1,\n      paddingHorizontal: 4,\n      marginVertical: 3,\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    text: {\n      color: theme.colors.text,\n      fontSize: 16,\n    },\n    content: {\n      paddingLeft: 5,\n      paddingRight: 5,\n      flexShrink: 1,\n      flex: 1,\n    },\n    method: {\n      fontSize: 18,\n      fontWeight: 'bold',\n      textAlign: 'center',\n      padding: 0,\n      width: 80,\n    },\n    time: {\n      color: theme.colors.muted,\n      marginTop: 5,\n      marginHorizontal: 2,\n    },\n    paddedUrl: {\n      paddingVertical: 20,\n    },\n  });\n\nexport default ResultItem;\n"]}