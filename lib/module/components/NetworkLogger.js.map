{"version":3,"sources":["NetworkLogger.tsx"],"names":["React","useEffect","useState","useCallback","Alert","View","StyleSheet","BackHandler","logger","ThemeContext","RequestList","RequestDetails","setBackHandler","sortRequests","requests","sort","reverse","NetworkLogger","theme","setRequests","getRequests","request","setRequest","showDetails","_setShowDetails","setShowDetails","shouldShow","undefined","setCallback","updatedRequests","enableXHRInterception","onBack","backHandler","addEventListener","remove","showMore","alert","text","onPress","clearRequests","style","styles","visible","hidden","item","create","flex"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport { Alert, View, StyleSheet, BackHandler } from 'react-native';\nimport logger from '../loggerSingleton';\nimport NetworkRequestInfo from '../NetworkRequestInfo';\nimport { ThemeContext, ThemeName } from '../theme';\nimport RequestList from './RequestList';\nimport RequestDetails from './RequestDetails';\nimport { setBackHandler } from '../backHandler';\n\ninterface Props {\n  theme?: ThemeName;\n  sort?: 'asc' | 'desc';\n}\n\nconst sortRequests = (requests: NetworkRequestInfo[], sort: 'asc' | 'desc') => {\n  if (sort === 'asc') {\n    return requests.reverse();\n  }\n  return [...requests];\n};\n\nconst NetworkLogger: React.FC<Props> = ({ theme = 'light', sort = 'desc' }) => {\n  const [requests, setRequests] = useState(\n    sortRequests(logger.getRequests(), sort)\n  );\n  const [request, setRequest] = useState<NetworkRequestInfo>();\n  const [showDetails, _setShowDetails] = useState(false);\n\n  const setShowDetails = useCallback((shouldShow: boolean) => {\n    _setShowDetails(shouldShow);\n\n    if (shouldShow) {\n      setBackHandler(() => setShowDetails(false));\n    } else {\n      setBackHandler(undefined);\n    }\n  }, []);\n\n  useEffect(() => {\n    logger.setCallback((updatedRequests: NetworkRequestInfo[]) => {\n      setRequests(sortRequests(updatedRequests, sort));\n    });\n\n    logger.enableXHRInterception();\n\n    return () => {\n      // no-op if component is unmounted\n      logger.setCallback(() => {});\n    };\n  }, [sort]);\n\n  useEffect(() => {\n    const onBack = () => {\n      if (showDetails) {\n        setShowDetails(false);\n        return true;\n      }\n\n      // Let default back handler take over\n      return false;\n    };\n\n    const backHandler = BackHandler.addEventListener(\n      'hardwareBackPress',\n      onBack\n    );\n\n    return () => backHandler.remove();\n  }, [showDetails, setShowDetails]);\n\n  const showMore = () => {\n    Alert.alert('More Options', undefined, [\n      {\n        text: 'Clear Logs',\n        onPress: () => logger.clearRequests(),\n        style: 'destructive',\n      },\n      { text: 'Cancel', style: 'cancel' },\n    ]);\n  };\n\n  return (\n    <ThemeContext.Provider value={theme}>\n      <View style={styles.visible}>\n        {showDetails && !!request && (\n          <View style={styles.visible}>\n            <RequestDetails\n              onClose={() => setShowDetails(false)}\n              request={request}\n            />\n          </View>\n        )}\n        <View style={showDetails && !!request ? styles.hidden : styles.visible}>\n          <RequestList\n            requests={requests}\n            onShowMore={showMore}\n            showDetails={showDetails && !!request}\n            onPressItem={(item) => {\n              setRequest(item);\n              setShowDetails(true);\n            }}\n          />\n        </View>\n      </View>\n    </ThemeContext.Provider>\n  );\n};\n\nconst styles = StyleSheet.create({\n  visible: {\n    flex: 1,\n  },\n  hidden: {\n    flex: 0,\n  },\n});\n\nexport default NetworkLogger;\n"]}